#!/usr/bin/env bash
NGX_CMAKE_FILE=$NGX_OBJS/CMakeList.txt
NGX_CMAKE_TMP=$NGX_OBJS/tmp

#output includes
ngx_incs=`echo $CORE_INCS $NGX_OBJS $HTTP_INCS $MAIL_INCS\
             | sed -e "s/  *\([^ ][^ ]*\)/$ngx_regex_cont\1/g" \
                   -e "s/\//$ngx_regex_dirsep/g"`
cat << END                                  > $NGX_CMAKE_TMP

include_directories(
    $ngx_incs)
END

#output src
ngx_src="$CORE_SRCS $HTTP_SRCS $MAIL_SRCS $NGX_MISC_SRCS $NGX_ADDON_SRCS $NGX_SHARED_SRCS"

ngx_src=`echo $ngx_src | sed -e "s/  *\([^ ][^ ]*\)/$ngx_regex_cont\1/g"\
                             -e "s/\//$ngx_regex_dirsep/g"`

cat << END                                    >> $NGX_CMAKE_TMP

set(SOURCE_FILES
    $ngx_src)

END

#output target
cat << END                                   >> $NGX_CMAKE_TMP

add_executable(nginx SOURCE_FILES)

END


#output lib
CORE_LIBS=`echo ${CORE_LIBS} | grep -o "lib[a-z]*\.a"`
CORE_LIBS=`echo ${CORE_LIBS} | sed -e "s/lib//g" -e "s/\.a//g"`

cat << END                                   >> $NGX_CMAKE_TMP

target_link_libraries(nginx $CORE_LIBS)

END

if [ -f $NGX_CMAKE_TMP ]
then
    (cat $NGX_CMAKE_TMP | sed -e "s/\\\//g") > $NGX_CMAKE_FILE
    rm $NGX_CMAKE_TMP  
fi
